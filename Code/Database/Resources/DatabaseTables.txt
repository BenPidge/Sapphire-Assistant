-- MySQL Script generated by MySQL Workbench
-- Tue Nov 10 22:36:38 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering. Execute this code using SQLite3

-- SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
-- SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
-- SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
-- USE `mydb` ;

-- -----------------------------------------------------
-- Table `Race`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Race` (
  `raceName` VARCHAR(10) NOT NULL,
  `raceId` INT UNSIGNED NOT NULL,
  `speed` INT UNSIGNED NOT NULL,
  `size` VARCHAR(10) NOT NULL,
  `darkvision` TINYINT NULL,
  `resistance` VARCHAR(45) NULL,
  PRIMARY KEY (`raceId`))


-- -----------------------------------------------------
-- Table `Language`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Language` (
  `languageId` INT UNSIGNED NOT NULL,
  `languageName` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`languageId`))


-- -----------------------------------------------------
-- Table `Subrace`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Subrace` (
  `subraceId` INT UNSIGNED NOT NULL,
  `raceId` INT UNSIGNED NOT NULL,
  `subraceName` VARCHAR(45) NOT NULL,
  `darkvision` TINYINT(1) NULL,
  `speed` INT NULL,
  `resistance` VARCHAR(45) NULL,
  PRIMARY KEY (`subraceId`, `raceId`),
    CONSTRAINT `raceId`
    FOREIGN KEY (`raceId`)
    REFERENCES `Race` (`raceId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)


-- -----------------------------------------------------
-- Table `RaceOptions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `RaceOptions` (
  `raceOptionsId` INT UNSIGNED NOT NULL,
  `raceId` INT UNSIGNED NOT NULL,
  `subraceId` INT UNSIGNED NULL,
  `amntToChoose` INT UNSIGNED NULL,
  PRIMARY KEY (`raceOptionsId`, `raceId`),
    CONSTRAINT `raceId`
    FOREIGN KEY (`raceId`)
    REFERENCES `Race` (`raceId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `subraceId`
    FOREIGN KEY (`subraceId`)
    REFERENCES `Subrace` (`subraceId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)


-- -----------------------------------------------------
-- Table `RaceLanguage`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `RaceLanguage` (
  `raceOptionsId` INT UNSIGNED NOT NULL,
  `languageId` INT NOT NULL,
  PRIMARY KEY (`raceOptionsId`, `languageId`),
    CONSTRAINT `raceOptionsId`
    FOREIGN KEY (`raceOptionsId`)
    REFERENCES `RaceOptions` (`raceOptionsId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `languageId`
    FOREIGN KEY (`languageId`)
    REFERENCES `Language` (`languageId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)


-- -----------------------------------------------------
-- Table `RaceAbilityScore`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `RaceAbilityScore` (
  `raceId` INT UNSIGNED NOT NULL,
  `abilityScore` VARCHAR(15) NOT NULL,
  `scoreIncrease` INT UNSIGNED NOT NULL,
  `subraceId` INT UNSIGNED NULL,
  PRIMARY KEY (`raceId`, `abilityScore`),
    CONSTRAINT `raceId`
    FOREIGN KEY (`raceId`)
    REFERENCES `Race` (`raceId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `subraceId`
    FOREIGN KEY (`subraceId`)
    REFERENCES `Subrace` (`subraceId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)


-- -----------------------------------------------------
-- Table `Proficiency`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Proficiency` (
  `proficiencyId` INT UNSIGNED NOT NULL,
  `proficiencyName` VARCHAR(45) NOT NULL,
  `proficiencyType` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`proficiencyId`))


-- -----------------------------------------------------
-- Table `RaceProficiency`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `RaceProficiency` (
  `raceOptionsId` INT UNSIGNED NOT NULL,
  `proficiencyId` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`raceOptionsId`, `proficiencyId`),
    CONSTRAINT `raceOptionsId`
    FOREIGN KEY (`raceOptionsId`)
    REFERENCES `RaceOptions` (`raceOptionsId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `proficiencyId`
    FOREIGN KEY (`proficiencyId`)
    REFERENCES `Proficiency` (`proficiencyId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)


-- -----------------------------------------------------
-- Table `Spell`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Spell` (
  `spellId` INT UNSIGNED NOT NULL,
  `spellName` VARCHAR(45) NOT NULL,
  `spellLevel` INT UNSIGNED NOT NULL,
  `castingTime` VARCHAR(45) NOT NULL,
  `duration` VARCHAR(45) NOT NULL,
  `range` INT UNSIGNED NOT NULL,
  `area` VARCHAR(45) NULL,
  `components` VARCHAR(45) NOT NULL,
  `attackOrSave` VARCHAR(45) NOT NULL,
  `school` VARCHAR(45) NOT NULL,
  `damageOrEffect` VARCHAR(45) NOT NULL,
  `description` MEDIUMTEXT NOT NULL,
  PRIMARY KEY (`spellId`))


-- -----------------------------------------------------
-- Table `RaceSpell`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `RaceSpell` (
  `raceOptionsId` INT UNSIGNED NOT NULL,
  `spellId` INT UNSIGNED NOT NULL,
  `spellLevel` INT UNSIGNED NULL,
  `characterLevel` INT UNSIGNED NULL,
  `modifierUsed` VARCHAR(45) NULL,
  PRIMARY KEY (`raceOptionsId`, `spellId`),
    CONSTRAINT `raceOptionsId`
    FOREIGN KEY (`raceOptionsId`)
    REFERENCES `RaceOptions` (`raceOptionsId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `spellId`
    FOREIGN KEY (`spellId`)
    REFERENCES `Spell` (`spellId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)


-- -----------------------------------------------------
-- Table `Trait`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Trait` (
  `traitId` INT UNSIGNED NOT NULL,
  `traitName` VARCHAR(45) NOT NULL,
  `traitDescription` MEDIUMTEXT NOT NULL,
  `traitTag` VARCHAR(45) NOT NULL,
  `traitTagValue` INT NULL,
  PRIMARY KEY (`traitId`))


-- -----------------------------------------------------
-- Table `TraitOption`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TraitOption` (
  `traitOptionId` INT UNSIGNED NOT NULL,
  `traitId` INT UNSIGNED NOT NULL,
  `optionDesc` MEDIUMTEXT NOT NULL,
  `optionVal` INT NULL,
  PRIMARY KEY (`traitOptionId`)
  CONSTRAINT `traitId`
    FOREIGN KEY (`traitId`)
    REFERENCES `Trait` (`traitId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)


-- -----------------------------------------------------
-- Table `RaceTrait`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `RaceTrait` (
  `raceId` INT UNSIGNED NOT NULL,
  `traitId` INT UNSIGNED NOT NULL,
  `subraceId` INT UNSIGNED NULL,
  PRIMARY KEY (`raceId`, `traitId`),
    CONSTRAINT `raceId`
    FOREIGN KEY (`raceId`)
    REFERENCES `Race` (`raceId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `traitId`
    FOREIGN KEY (`traitId`)
    REFERENCES `Trait` (`traitId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `subraceId`
    FOREIGN KEY (`subraceId`)
    REFERENCES `Subrace` (`subraceId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)


-- -----------------------------------------------------
-- Table `Class`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Class` (
  `classId` INT UNSIGNED NOT NULL,
  `hitDiceSides` INT UNSIGNED NOT NULL,
  `primaryAbility` VARCHAR(45) NOT NULL,
  `secondaryAbility` VARCHAR(45) NOT NULL,
  `isMagical` TINYINT(1) NOT NULL,
  `savingThrows` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`classId`)
  )


-- -----------------------------------------------------
-- Table `Subclass`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Subclass` (
  `subclassId` INT UNSIGNED NOT NULL,
  `subclassName` VARCHAR(45) NOT NULL,
  `classId` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`subclassId`),
  CONSTRAINT `classId`
    FOREIGN KEY (`classId`)
    REFERENCES `Class` (`classId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)


-- -----------------------------------------------------
-- Table `ClassOptions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ClassOptions` (
  `classOptionsId` INT UNSIGNED NOT NULL,
  `classId` INT UNSIGNED NOT NULL,
  `subclassId` INT UNSIGNED NULL,
  `amntToChoose` INT UNSIGNED NULL,
  `lvlRequired` INT UNSIGNED NULL,
  PRIMARY KEY (`classOptionsId`, `classId`),
    CONSTRAINT `classId`
    FOREIGN KEY (`classId`)
    REFERENCES `Class` (`classId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `subclassId`
    FOREIGN KEY (`subclassId`)
    REFERENCES `Subclass` (`subclassId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)


-- -----------------------------------------------------
-- Table `ClassProficiency`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ClassProficiency` (
  `classOptionsId` INT UNSIGNED NOT NULL,
  `proficiencyId` INT UNSIGNED NOT NULL,
  `expertise` TINYINT(1) NULL,
  PRIMARY KEY (`classOptionsId`, `proficiencyId`),
    CONSTRAINT `classOptionsId`
    FOREIGN KEY (`classOptionsId`)
    REFERENCES `ClassOptions` (`classOptionsId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `proficiencyId`
    FOREIGN KEY (`proficiencyId`)
    REFERENCES `Proficiency` (`proficiencyId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)


-- -----------------------------------------------------
-- Table `Magic`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Magic` (
  `magicId` INT UNSIGNED NOT NULL,
  `classId` INT UNSIGNED NOT NULL,
  `spellsPrepared` TINYINT(1) NOT NULL,
  `knownCalc` VARCHAR(45) NOT NULL,
  `amntKnown` INT UNSIGNED NULL,
  `lvl` INT UNSIGNED NOT NULL,
  `cantripsKnown` INT UNSIGNED NULL,
  `subclassId` INT UNSIGNED NULL,
  PRIMARY KEY (`magicId`, `classId`),
    FOREIGN KEY (`classId`)
    REFERENCES `Class` (`classId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
  CONSTRAINT `subclassId`
    FOREIGN KEY (`subclassId`)
    REFERENCES `Subclass` (`subclassId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)


-- -----------------------------------------------------
-- Table `ClassSpell`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ClassSpell` (
  `magicId` INT UNSIGNED NOT NULL,
  `spellId` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`magicId`, `spellId`),
    CONSTRAINT `magicId`
    FOREIGN KEY (`magicId`)
    REFERENCES `Magic` (`magicId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `spellId`
    FOREIGN KEY (`spellId`)
    REFERENCES `Spell` (`spellId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)


-- -----------------------------------------------------
-- Table `ClassLanguage`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ClassLanguage` (
  `classOptionsId` INT UNSIGNED NOT NULL,
  `languageId` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`classOptionsId`, `languageId`),
    CONSTRAINT `classOptionsId`
    FOREIGN KEY (`classOptionsId`)
    REFERENCES `ClassOptions` (`classOptionsId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `languageId`
    FOREIGN KEY (`languageId`)
    REFERENCES `Language` (`languageId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)


-- -----------------------------------------------------
-- Table `ClassTrait`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ClassTrait` (
  `classOptionsId` INT UNSIGNED NOT NULL,
  `traitId` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`classOptionsId`, `traitId`),
    CONSTRAINT `classOptionsId`
    FOREIGN KEY (`classOptionsId`)
    REFERENCES `ClassOptions` (`classOptionsId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `traitId`
    FOREIGN KEY (`traitId`)
    REFERENCES `Trait` (`traitId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)


-- -----------------------------------------------------
-- Table `ClassSpellslot`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ClassSpellslot` (
  `magicId` INT UNSIGNED NOT NULL,
  `spellslotLvl` INT UNSIGNED NOT NULL,
  `amount` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`magicId`, `spellslotLvl`),
  CONSTRAINT `magicId`
    FOREIGN KEY (`magicId`)
    REFERENCES `Magic` (`magicId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)


-- -----------------------------------------------------
-- Table `Background`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Background` (
  `backgroundId` INT UNSIGNED NOT NULL,
  `skillAmnt` INT UNSIGNED NULL,
  `languageAmnt` INT UNSIGNED NULL,
  `toolAmnt` INT UNSIGNED NULL,
  PRIMARY KEY (`backgroundId`))


-- -----------------------------------------------------
-- Table `BackgroundProficiency`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BackgroundProficiency` (
  `backgroundId` INT UNSIGNED NOT NULL,
  `proficiencyId` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`backgroundId`, `proficiencyId`),
    CONSTRAINT `backgroundId`
    FOREIGN KEY (`backgroundId`)
    REFERENCES `Background` (`backgroundId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `proficiencyId`
    FOREIGN KEY (`proficiencyId`)
    REFERENCES `Proficiency` (`proficiencyId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)


-- -----------------------------------------------------
-- Table `BackgroundLanguage`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BackgroundLanguage` (
  `backgroundId` INT UNSIGNED NOT NULL,
  `languageId` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`backgroundId`, `languageId`),
    CONSTRAINT `backgroundId`
    FOREIGN KEY (`backgroundId`)
    REFERENCES `Background` (`backgroundId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `languageId`
    FOREIGN KEY (`languageId`)
    REFERENCES `Language` (`languageId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)


-- -----------------------------------------------------
-- Table `Equipment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Equipment` (
  `equipmentId` INT UNSIGNED NOT NULL,
  `equipmentName` VARCHAR(45) NOT NULL,
  `description` MEDIUMTEXT NULL,
  `diceSides` INT UNSIGNED NULL,
  `diceNum` INT UNSIGNED NULL,
  `armorClass` VARCHAR(45) NULL,
  `weight` INT UNSIGNED NULL,
  `value` VARCHAR(45) NULL,
  PRIMARY KEY (`equipmentId`))


-- -----------------------------------------------------
-- Table `EquipmentOption`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EquipmentOption` (
  `equipOptionId` INT UNSIGNED NOT NULL,
  `classId` INT UNSIGNED NULL,
  `backgroundId` INT UNSIGNED NULL,
  `hasChoice` TINYINT(1) NULL,
  `suboption` INT UNSIGNED NULL,
  PRIMARY KEY (`equipOptionId`),
  CONSTRAINT `classId`
    FOREIGN KEY (`classId`)
    REFERENCES `Class` (`classId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `suboption`
    FOREIGN KEY (`suboption`)
    REFERENCES `EquipmentOption` (`equipOptionId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `backgroundId`
    FOREIGN KEY (`backgroundId`)
    REFERENCES `Background` (`backgroundId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)


-- -----------------------------------------------------
-- Table `EquipmentIndivOption`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EquipmentIndivOption` (
  `equipmentId` INT UNSIGNED NOT NULL,
  `equipmentOptionId` INT UNSIGNED NOT NULL,
  `amnt` INT NULL,
  PRIMARY KEY (`equipmentId`, `equipmentOptionId`),
    CONSTRAINT `equipmentId`
    FOREIGN KEY (`equipmentId`)
    REFERENCES `Equipment` (`equipmentId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `equipmentOptionId`
    FOREIGN KEY (`equipmentOptionId`)
    REFERENCES `EquipmentOption` (`equipOptionId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)


-- -----------------------------------------------------
-- Table `Archetype`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Archetype` (
  `archetypeId` INT UNSIGNED NOT NULL,
  `archetypeName` VARCHAR(45) NOT NULL,
  `description` VARCHAR(45) NOT NULL,
  `magicWeighting` DECIMAL NOT NULL,
  `healthWeighting` DECIMAL NOT NULL,
  PRIMARY KEY (`archetypeId`))


-- -----------------------------------------------------
-- Table `ArchetypeTag`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ArchetypeTag` (
  `archetypeId` INT UNSIGNED NOT NULL,
  `tagId` INT UNSIGNED NOT NULL,
  `weighting` DECIMAL NOT NULL,
  PRIMARY KEY (`archetypeId`, `tagId`),
  CONSTRAINT `archetypeId`
    FOREIGN KEY (`archetypeId`)
    REFERENCES `Archetype` (`archetypeId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `tagId`
    FOREIGN KEY (`tagId`)
    REFERENCES `Tag` (`tagId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)


-- -----------------------------------------------------
-- Table `GenericTag`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GenericTag` (
  `genericTagId` INT UNSIGNED NOT NULL,
  `genericTagName` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`genericTagId`))


-- -----------------------------------------------------
-- Table `EquipmentTag`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EquipmentTag` (
  `genericTagId` INT UNSIGNED NOT NULL,
  `equipmentId` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`genericTagId`, `equipmentId`),
  CONSTRAINT `genericTagId`
    FOREIGN KEY (`genericTagId`)
    REFERENCES `GenericTag` (`genericTagId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `equipmentId`
    FOREIGN KEY (`equipmentId`)
    REFERENCES `Equipment` (`equipmentId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)


-- -----------------------------------------------------
-- Table `TraitTag`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TraitTag` (
  `genericTagId` INT UNSIGNED NOT NULL,
  `traitId` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`genericTagId`, `traitId`),
  CONSTRAINT `genericTagId`
    FOREIGN KEY (`genericTagId`)
    REFERENCES `GenericTag` (`genericTagId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `traitId`
    FOREIGN KEY (`traitId`)
    REFERENCES `Trait` (`traitId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)


-- -----------------------------------------------------
-- Table `ArchTagConn`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ArchTagConn` (
  `genericTagId` INT UNSIGNED NOT NULL,
  `tagId` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`genericTagId`, `tagId`),
  CONSTRAINT `genericTagId`
    FOREIGN KEY (`genericTagId`)
    REFERENCES `GenericTag` (`genericTagId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `tagId`
    FOREIGN KEY (`tagId`)
    REFERENCES `Tag` (`tagId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)


-- -----------------------------------------------------
-- Table `SpellTag`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SpellTag` (
  `genericTagId` INT UNSIGNED NOT NULL,
  `spellId` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`genericTagId`, `spellId`),
  CONSTRAINT `genericTagId`
    FOREIGN KEY (`genericTagId`)
    REFERENCES `GenericTag` (`genericTagId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `spellId`
    FOREIGN KEY (`spellId`)
    REFERENCES `Spell` (`spellId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)


-- -----------------------------------------------------
-- Table `Tag`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Tag` (
  `tagId` INT UNSIGNED NOT NULL,
  `tagName` VARCHAR(45) NOT NULL,
  `tagSubgroup` VARCHAR(45) NOT NULL,
  `equipmentTags` VARCHAR(45) NULL,
  'traitTags' VARCHAR(45) NULL,
  PRIMARY KEY (`tagId`))


-- -----------------------------------------------------
-- Table `TagProficiency`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TagProficiency` (
  `tagId` INT UNSIGNED NOT NULL,
  `proficiencyId` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`tagId`, `proficiencyId`),
  CONSTRAINT `tagId`
    FOREIGN KEY (`tagId`)
    REFERENCES `Tag` (`tagId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `proficiencyId`
    FOREIGN KEY (`proficiencyId`)
    REFERENCES `Proficiency` (`proficiencyId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)


-- -----------------------------------------------------
-- Table `Name`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Name` (
  `nameId` INT UNSIGNED NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `gender` VARCHAR(45) NOT NULL,
  `position` VARCHAR(45) NULL,
  PRIMARY KEY (`nameId`))


-- -----------------------------------------------------
-- Table `Personality`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Personality` (
  `personalityId` INT UNSIGNED NOT NULL,
  `personalityName` VARCHAR(45) NOT NULL,
  `description` MEDIUMTEXT NOT NULL,
  `personalityType` VARCHAR(45) NULL,
  PRIMARY KEY (`personalityId`))


-- -----------------------------------------------------
-- Table `ClashTag`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ClashTag` (
  `clashTagId` INT UNSIGNED NOT NULL,
  `clashTagName` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`clashTagId`))


-- -----------------------------------------------------
-- Table `PersonalityTag`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PersonalityTag` (
  `clashTagId` INT UNSIGNED NOT NULL,
  `personalityId` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`clashTagId`, `personalityId`),
  CONSTRAINT `clashTagId`
    FOREIGN KEY (`clashTagId`)
    REFERENCES `ClashTag` (`clashTagId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `personalityId`
    FOREIGN KEY (`personalityId`)
    REFERENCES `Personality` (`personalityId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)


-- -----------------------------------------------------
-- Table `Location`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Location` (
  `locationId` INT UNSIGNED NOT NULL,
  `locationName` VARCHAR(45) NOT NULL,
  `size` VARCHAR(45) NOT NULL,
  `country` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`locationId`),
  CONSTRAINT `country`
    FOREIGN KEY (`country`)
    REFERENCES `Country` (`countryName`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)


-- -----------------------------------------------------
-- Table `Country`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Country` (
    `countryId` INT UNSIGNED NOT NULL,
    `countryName` VARCHAR(45) NOT NULL,
    PRIMARY KEY (`countryId`))


-- -----------------------------------------------------
-- Table `LocationRaceLimit`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LocationRaceLimit` (
  `locationId` INT UNSIGNED NOT NULL,
  `raceId` INT UNSIGNED NOT NULL,
  `subraceId` INT UNSIGNED NULL,
  `limitation` VARCHAR(45)  NOT NULL,
  PRIMARY KEY (`locationId`, `raceId`),
  CONSTRAINT `locationId`
    FOREIGN KEY (`locationId`)
    REFERENCES `Location` (`locationId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `raceId`
    FOREIGN KEY (`raceId`)
    REFERENCES `Race` (`raceId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `subraceId`
    FOREIGN KEY (`subraceId`)
    REFERENCES `Subrace` (`subraceId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)


-- -----------------------------------------------------
-- Table `Profession`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Profession` (
  `professionId` INT UNSIGNED NOT NULL,
  `professionName` VARCHAR(45) NOT NULL,
  `importance` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`professionId`))


-- -----------------------------------------------------
-- Table `LocationProfessionLimit`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LocationProfessionLimit` (
  `locationId` INT UNSIGNED NOT NULL,
  `professionId` INT UNSIGNED NOT NULL,
  `limitation` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`locationId`, `professionId`),
  CONSTRAINT `locationId`
    FOREIGN KEY (`locationId`)
    REFERENCES `Location` (`locationId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `professionId`
    FOREIGN KEY (`professionId`)
    REFERENCES `Profession` (`professionId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)


-- -----------------------------------------------------
-- Table `ProfessionEquipment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ProfessionEquipment` (
  `equipmentId` INT UNSIGNED NOT NULL,
  `professionId` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`equipmentId`, `professionId`),
  CONSTRAINT `equipmentId`
    FOREIGN KEY (`equipmentId`)
    REFERENCES `Equipment` (`equipmentId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `professionId`
    FOREIGN KEY (`professionId`)
    REFERENCES `Profession` (`professionId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)


-- -----------------------------------------------------
-- Table `Ethnicity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Ethnicity` (
  `ethnicityId` INT UNSIGNED NOT NULL,
  `ethnicityName` VARCHAR(45) NOT NULL,
  `skinColor` VARCHAR(45) NOT NULL,
  `hairColor` VARCHAR(45) NOT NULL,
  `hairThickness` VARCHAR(45) NOT NULL,
  `size` VARCHAR(45) NOT NULL,
  `build` VARCHAR(45) NOT NULL,
  `pitch` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`ethnicityId`))


-- -----------------------------------------------------
-- Table `EthnicityCountryLimit`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EthnicityCountryLimit` (
  `countryId` INT UNSIGNED NOT NULL,
  `ethnicityId` INT UNSIGNED NOT NULL,
  `limitation` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`ethnicityId`, `countryId`),
  CONSTRAINT `countryId`
    FOREIGN KEY (`countryId`)
    REFERENCES `Country` (`countryId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `ethnicityId`
    FOREIGN KEY (`ethnicityId`)
    REFERENCES `Ethnicity` (`ethnicityId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
